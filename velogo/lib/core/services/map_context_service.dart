import 'package:flutter/material.dart';
import 'package:latlong2/latlong.dart';
import 'map_zoom_config.dart';
import '../services/log_service.dart';

/// –ö–æ–Ω—Ç–µ–∫—Å—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–∞—Ä—Ç–∏
enum MapContext {
  routeCreation, // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—É
  routeViewing, // –ü–µ—Ä–µ–≥–ª—è–¥ –º–∞—Ä—à—Ä—É—Ç—É
  detailAnalysis, // –î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑
  pointSearch, // –ü–æ—à—É–∫ —Ç–æ—á–∫–∏
  navigation, // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
  overview, // –ó–∞–≥–∞–ª—å–Ω–∏–π –æ–≥–ª—è–¥
}

/// –°–µ—Ä–≤—ñ—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞–º–∏ –∫–∞—Ä—Ç–∏ —Ç–∞ —ó—Ö –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è–º–∏
class MapContextService {
  static final Map<MapContext, MapZoomConfig> _contextConfigs = {
    MapContext.routeCreation: MapZoomConfig(
      defaultZoom: 16.5, // –ó–±—ñ–ª—å—à–µ–Ω–æ –∑ 15.5
      minZoom: 14.0,
      maxZoom: 18.0,
      autoFit: false,
      animationDuration: Duration(milliseconds: 600),
      animationCurve: Curves.easeInOut,
    ),
    MapContext.routeViewing: MapZoomConfig(
      defaultZoom: 15.0, // –ó–±—ñ–ª—å—à–µ–Ω–æ –∑ 13.0
      minZoom: 10.0,
      maxZoom: 16.0,
      autoFit: true, // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—ñ–¥–ª–∞—à—Ç–æ–≤—É–≤–∞—Ç–∏ –ø—ñ–¥ –º–∞—Ä—à—Ä—É—Ç
      animationDuration: Duration(milliseconds: 800),
      animationCurve: Curves.easeInOutCubic,
    ),
    MapContext.detailAnalysis: MapZoomConfig(
      defaultZoom: 17.0,
      minZoom: 15.0,
      maxZoom: 19.0,
      autoFit: false,
      animationDuration: Duration(milliseconds: 400),
      animationCurve: Curves.easeIn,
    ),
    MapContext.pointSearch: MapZoomConfig(
      defaultZoom: 16.0,
      minZoom: 14.0,
      maxZoom: 18.0,
      autoFit: false,
      animationDuration: Duration(milliseconds: 500),
      animationCurve: Curves.easeOut,
    ),
    MapContext.navigation: MapZoomConfig(
      defaultZoom: 16.5,
      minZoom: 15.0,
      maxZoom: 18.0,
      autoFit: false,
      animationDuration: Duration(milliseconds: 300),
      animationCurve: Curves.linear,
    ),
    MapContext.overview: MapZoomConfig(
      defaultZoom: 12.0,
      minZoom: 8.0,
      maxZoom: 15.0,
      autoFit: true,
      animationDuration: Duration(milliseconds: 1000),
      animationCurve: Curves.easeInOutCubic,
    ),
  };

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
  static MapZoomConfig getConfig(MapContext context) {
    final config = _contextConfigs[context];
    if (config == null) {
      LogService.log('‚ö†Ô∏è [MapContextService] –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É $context –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—É');
      return _contextConfigs[MapContext.overview]!;
    }
    return config;
  }

  /// –í–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
  static MapContext determineContext({
    required String currentScreen,
    required List<LatLng>? routePoints,
    required bool isDrawingMode,
    required bool hasSelectedPoint,
    required bool isNavigationActive,
  }) {
    LogService.log('üîç [MapContextService] –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É: screen=$currentScreen, points=${routePoints?.length}, drawing=$isDrawingMode, selected=$hasSelectedPoint, nav=$isNavigationActive');

    // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –º–∞—î –Ω–∞–π–≤–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç
    if (isNavigationActive) {
      return MapContext.navigation;
    }

    // –ê–Ω–∞–ª—ñ–∑ –µ–∫—Ä–∞–Ω—É
    switch (currentScreen.toLowerCase()) {
      case 'create_route':
      case 'create_route_screen':
        if (isDrawingMode) {
          return hasSelectedPoint ? MapContext.detailAnalysis : MapContext.routeCreation;
        }
        return MapContext.routeCreation;

      case 'route_screen':
      case 'route_view':
        if (routePoints != null && routePoints.isNotEmpty) {
          return MapContext.routeViewing;
        }
        return MapContext.overview;

      case 'search':
      case 'point_search':
        return MapContext.pointSearch;

      default:
        // –ó–∞–≥–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞
        if (routePoints != null && routePoints.isNotEmpty) {
          return MapContext.routeViewing;
        }
        if (hasSelectedPoint) {
          return MapContext.detailAnalysis;
        }
        return MapContext.overview;
    }
  }

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∏
  static List<MapContext> getAllContexts() {
    return MapContext.values;
  }

  /// –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—ñ–¥—Ç—Ä–∏–º—É—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—ñ–¥–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
  static bool supportsAutoFit(MapContext context) {
    return getConfig(context).autoFit;
  }

  /// –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–ø–∏—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
  static String getContextDescription(MapContext context) {
    switch (context) {
      case MapContext.routeCreation:
        return '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—É';
      case MapContext.routeViewing:
        return '–ü–µ—Ä–µ–≥–ª—è–¥ –º–∞—Ä—à—Ä—É—Ç—É';
      case MapContext.detailAnalysis:
        return '–î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑';
      case MapContext.pointSearch:
        return '–ü–æ—à—É–∫ —Ç–æ—á–∫–∏';
      case MapContext.navigation:
        return '–ù–∞–≤—ñ–≥–∞—Ü—ñ—è';
      case MapContext.overview:
        return '–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–≥–ª—è–¥';
    }
  }

  /// –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–±–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å)
  static void updateConfig(MapContext context, MapZoomConfig newConfig) {
    LogService.log('‚öôÔ∏è [MapContextService] –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –¥–ª—è $context: $newConfig');
    _contextConfigs[context] = newConfig;
  }
}
